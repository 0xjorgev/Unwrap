{
    "title": "Lazy properties",
    "postscript": "",
    "reviewType": "multipleSelection",
    "question": "Which of these are true?",
    "hint": "Lazy properties are an important performance optimization, because they let us run code only once and only when it's needed.",
    "syntaxHighlighting": false,
    "correct": [
        {
            "answer": "Lazy properties are created only when first accessed.",
            "reason": ""
        },
        {
            "answer": "You can assign lazy properties by calling a method.",
            "reason": ""
        },
        {
            "answer": "Lazy properties are created using the <code>lazy<\/code> keyword.",
            "reason": ""
        },
        {
            "answer": "Lazy properties can be used inside any kind of structs.",
            "reason": ""
        },
        {
            "answer": "A lazy property can be an instance of a different struct.",
            "reason": ""
        },
        {
            "answer": "Lazy properties are a performance optimization.",
            "reason": ""
        }
    ],
    "wrong": [
        {
            "answer": "Lazy properties never do any work.",
            "reason": ""
        },
        {
            "answer": "Lazy properties only work with strings.",
            "reason": ""
        },
        {
            "answer": "Lazy properties are created when your app finishes.",
            "reason": ""
        },
        {
            "answer": "Lazy properties act like property observers.",
            "reason": ""
        },
        {
            "answer": "Lazy properties must be created using <code>self<\/code>",
            "reason": ""
        },
        {
            "answer": "Lazy properties can use trailing closure syntax.",
            "reason": ""
        }
    ]
}